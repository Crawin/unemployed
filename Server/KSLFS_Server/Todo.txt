완료 시 앞에 주석처리.

24.01.18
//1. 매 프레임마다 mutex 사용해서 공유자원 할당 시 프레임드랍이 일어나는지 확인.
//2. Recv queue처럼 데이터를 모아두고, 한 프레임이 끝났을때, Recv queue에 들어온 패킷이 존재하면? 해당 좌표로 클라이언트 오브젝트 이동.
 
둘 중 뭐가 더 나은지 확인할 것.
-> 24.01.30 로컬에서 작업해서 그런지 둘이 동일하게 나옴.

24.01.30
충돌 구현시작하기
24.02.01
//1. 클라 강제종료시 발생하는 예외 처리 수정.
//2. 리시브큐 -> 서버 프레임을 정해두고 해당 프레임마다 서버가 전송해주는?
 -> 매 프레임 send를 하는게 문제인거 같은데... 매프레임 recv는 어차피 아니니까...
-> 일정 프레임마다 클라에서 send를 하고, 그 위치를 바탕으로 충돌체크를 해봅시다.
3. 2번 사항에서 클라이언트도 프레임을 정해두고 send 해야하는지 실험해볼것.

24.02.14
1. 윤기 e동1층을 읽어와서 충돌 함수를 만들기
//2. 방코드 랜덤하게 만들어서 중복 처리 없이 할당하기.
//3. 클라에 2p 만들기

24.03.05
//1. VIVOX 분석 -> 게임서버 접속 시 VIVOX 연동.

24.03.22
1. 충돌 가능한 오브젝트 충돌체크
2. 로비 화면 제작
3. 컷신 슬슬 구상하기